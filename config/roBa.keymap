#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt_to_layer_0 6 Q  &kp W   &kp E   &kp R  &kp T                                 &kp Y  &kp U  &kp I      &kp O     &kp P
&kp A               &kp S   &kp D   &kp F  &kp G      &kp LS(LG(S))      &trans  &kp H  &kp J  &kp K      &kp L     &lt 5 KP_ENTER
&kp Z               &kp X   &kp C   &kp V  &kp B      &trans             &trans  &kp N  &kp M  &kp SPACE  &kp RWIN  &kp RSHIFT
&kp LSHIFT          &trans  &trans  &mo 3  &kp LCTRL  &kp LALT           &mo 1   &mo 2                              &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        layer_one {
            bindings = <
&trans           &trans       &trans         &trans        &trans                                                  &kp UNDERSCORE  &kp SLASH      &kp PLUS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH       &kp DOLLAR    &kp SQT            &kp LC(LA(KP_NUMBER_0))      &trans  &kp COLON       &kp PIPE       &kp MINUS  &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&kp PERCENT      &kp CARET    &kp AMPERSAND  &kp ASTERISK  &kp DOUBLE_QUOTES  &trans                       &trans  &kp SEMICOLON   &kp BACKSLASH  &kp EQUAL  &kp LEFT_BRACE        &kp RIGHT_BRACE
&trans           &trans       &trans         &trans        &trans             &trans                       &trans  &trans                                                          &trans
            >;
        };

        layer_two {
            bindings = <
&trans        &trans        &trans        &trans        &trans                            &kp F1   &kp F2   &kp F3   &kp F4  &kp F5
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5  &trans      &trans  &kp F6   &kp F7   &kp F8   &kp F9  &kp F10
&kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans      &trans  &kp F11  &kp F12  &kp F13  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans      &trans  &trans                             &trans
            >;
        };

        layer_three {
            bindings = <
&trans   &trans          &trans          &trans           &trans                             &trans     &trans      &trans        &trans         &kp PRINTSCREEN
&kp ESC  &kp HOME        &kp UP_ARROW    &kp END          &kp BACKSPACE  &trans      &trans  &kp GRAVE  &kp TILDE   &trans        &trans         &trans
&kp TAB  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp DELETE     &trans      &trans  &kp COMMA  &kp PERIOD  &kp QUESTION  &kp LESS_THAN  &kp GREATER_THAN
&trans   &trans          &trans          &trans           &trans         &trans      &trans  &trans                                              &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
